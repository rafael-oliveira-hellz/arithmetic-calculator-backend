name: Build and Deploy Lambda

on:
  push:
    paths:
      - "calculatorCreateOperation/**"
      - "calculatorDeleteRecords/**"
      - "calculatorListOperations/**"
      - "calculatorListRecords/**"
      - "calculatorLogin/**"
      - "calculatorLogout/**"
      - "calculatorSignup/**"
      - "lambda-mapping.json"
      - ".github/workflows/deploy.yml"

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout and fetch repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Identify changed directories
        id: detect-dir
        run: |
          git fetch --prune --tags
          changed_dirs=$(git diff --name-only origin/master~1 HEAD | grep -oE '^calculator[^/]+' | sort -u)
          if [ -z "$changed_dirs" ]; then
            echo "No directories detected. Exiting."
            exit 1
          fi
          echo "Detected changed directories: ${changed_dirs}"
          echo "changed_dirs=${changed_dirs}" >> $GITHUB_ENV

      - name: Load Lambda mapping
        id: load-mapping
        run: |
          jq . lambda-mapping.json > /dev/null
          MAP=$(cat lambda-mapping.json)
          for dir in ${{ env.changed_dirs }}; do
            clean_dir=$(echo $dir | tr -d '/')
            LAMBDA_NAME=$(echo $MAP | jq -r ".${clean_dir}")
            if [ "$LAMBDA_NAME" != "null" ]; then
              echo "lambda_name=${LAMBDA_NAME}" >> $GITHUB_ENV
              echo "changed_dir=${dir}" >> $GITHUB_ENV
              break
            fi
          done
          if [ -z "${LAMBDA_NAME}" ]; then
            echo "No Lambda mapping found. Exiting."
            exit 1
          fi

      - name: Debug changed directory and Lambda function
        run: |
          echo "Changed directory: ${{ env.changed_dir }}"
          echo "Lambda function: ${{ env.lambda_name }}"

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "21"

      - name: Build and package Lambda
        working-directory: ${{ env.changed_dir }}
        run: |
          mvn clean package -DskipTests
          zip -j lambda-artifact.zip target/*.jar

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: sa-east-1

      - name: Deploy Lambda function
        run: |
          aws lambda update-function-code \
            --function-name ${{ env.lambda_name }} \
            --zip-file fileb://lambda-artifact.zip
